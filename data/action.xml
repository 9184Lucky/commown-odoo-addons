<?xml version="1.0"?>
<odoo>

  <!-- Server action that moves an issue to the "stage_retry_payment_and_wait" stage -->
  <record id="action_move_issue_to_payment_retrial" model="ir.actions.server">
    <field name="name">Move issue to the payment retry stage</field>
    <field name="model_id" ref="project_issue.model_project_issue"/>
    <field name="sequence">5</field>
    <field name="state">code</field>
    <field name="code"><![CDATA[
record.update({'stage_id': env.ref('payment_slimpay_issue.stage_retry_payment_and_wait').id})
]]>
    </field>
  </record>

  <!-- Server action that retries the payment of an issue -->
  <record id="action_retry_payment" model="ir.actions.server">
    <field name="name">Retry payment</field>
    <field name="model_id" ref="project_issue.model_project_issue"/>
    <field name="sequence">5</field>
    <field name="state">code</field>
    <field name="code"><![CDATA[
record._slimpay_payment_issue_retry_payment()
]]>
    </field>
  </record>

  <!-- Server action that moves an issue to the "stage_issue_fixed" stage -->
  <record id="action_move_issue_to_fixed" model="ir.actions.server">
    <field name="name">Move issue to the fixed issue stage</field>
    <field name="model_id" ref="project_issue.model_project_issue"/>
    <field name="sequence">5</field>
    <field name="state">code</field>
    <field name="code"><![CDATA[
record.update({'stage_id': env.ref('payment_slimpay_issue.stage_issue_fixed').id})
]]>
    </field>
  </record>

  <!-- Automatic action based on time, triggered when the
       time spent in the "warn partner and wait" stage was too long -->
  <record id="move_to_payment_retrial_after_waiting_delay" model="base.action.rule">
    <field name="name">Move issue to payment retrial after waiting delay</field>
    <field name="model_id" ref="project_issue.model_project_issue"/>
    <field name="sequence">1</field>
    <field name="kind">on_time</field>
    <field name="filter_domain"
           eval="[('stage_id', '=', ref('payment_slimpay_issue.stage_warn_partner_and_wait'))]"/>
    <field name="trg_date_id" search="[('model', '=', 'project.issue'), ('name', '=', 'date_last_stage_update')]"/>
    <field name="trg_date_range">3</field>
    <field name="trg_date_range_type">day</field>
    <field name="server_action_ids"
           eval="[(6,0,[ref('action_move_issue_to_payment_retrial')])]"/>
  </record>

  <!-- Automatic action triggering a payment retrial when an payment issue
       enters the dedicated stage ('stage_retry_payment_and_wait') -->
  <record id="retry_payment" model="base.action.rule">
    <field name="name">Retry payment when entering the dedicated stage</field>
    <field name="model_id" ref="project_issue.model_project_issue"/>
    <field name="sequence">5</field>
    <field name="kind">on_write</field>
    <field name="filter_pre_domain"
           eval="[('stage_id', '!=', ref('stage_retry_payment_and_wait'))]"/>
    <field name="filter_domain"
           eval="[('stage_id', '=', ref('stage_retry_payment_and_wait'))]"/>
    <field name="server_action_ids"
           eval="[(6,0,[ref('action_retry_payment')])]"/>
  </record>

  <!-- Automatic action based on time, triggered when the time spent
       in the "stage_retry_payment_and_wait" stage was long enough to
       declare the payment issue fixed -->
  <record id="move_to_fixed_after_waiting_delay" model="base.action.rule">
    <field name="name">Move issue to fixed after waiting delay</field>
    <field name="model_id" ref="project_issue.model_project_issue"/>
    <field name="sequence">1</field>
    <field name="kind">on_time</field>
    <field name="filter_domain"
           eval="[('stage_id', '=', ref('payment_slimpay_issue.stage_retry_payment_and_wait'))]"/>
    <field name="trg_date_id" search="[('model', '=', 'project.issue'), ('name', '=', 'date_last_stage_update')]"/>
    <field name="trg_date_range">8</field>
    <field name="trg_date_range_type">day</field>
    <field name="server_action_ids"
           eval="[(6,0,[ref('action_move_issue_to_fixed')])]"/>
  </record>

</odoo>
