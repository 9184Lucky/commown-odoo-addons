<?xml version="1.0"?>
<odoo>

  <record id="action_add_to_support_groups" model="ir.actions.server">
    <field name="name">[commown] Add buyer to product's support groups</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">5</field>
    <field name="state">code</field>
    <field name="code">
for so_line in record.order_line:
    for group in so_line.product_id.product_tmpl_id.support_group_ids:
        group.add_users(record.partner_id.user_ids)
    </field>
  </record>

  <record id="action_add_investor_management_task" model="ir.actions.server">
    <field name="name">[commown] Add investor management task</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">10</field>
    <field name="state">code</field>
    <field name="code">
PROJECT_NAME = u'Suivi des Investisseurs'
MANAGER_LOGIN = u'fred@commown.fr'
EQUITY_TYPE = 'invest'  # 'crowd'

HTML_ESCAPE_TABLE = {
    "&amp;": "&amp;amp;",
    '"': "&amp;quot;",
    "'": "&amp;apos;",
    "&gt;": "&amp;gt;",
    "&lt;": "&amp;lt;",
    }

product_tmpl_ids = env['product.template'].search([
    ('is_equity', '=', True),
    ('equity_type', '=', 'invest')
]).mapped('id')

project = env['project.project'].search([('name', '=', PROJECT_NAME)])
if len(project) != 1:
    raise Warning('[server-action] No such project %r' % PROJECT_NAME)

for column in project.type_ids:
    if column.sequence == 1:
        break
else:
    raise Warning('[server-action] 1st column not found on %r' % PROJECT_NAME)

manager = env['res.users'].search([('login', '=', MANAGER_LOGIN)])
if len(project) != 1:
    raise Warning('[server-action] No such manager %r' % MANAGER_LOGIN)

description = []
for line in record.order_line:
    if line.product_id.product_tmpl_id.id in product_tmpl_ids:
        description.append(u'&lt;p&gt;&lt;b&gt;NÂ° de commande : &lt;/b&gt;%s&lt;/p&gt;' % ''.join(
            HTML_ESCAPE_TABLE.get(c, c) for c in record.name))
        description.append(u'&lt;p&gt;&lt;b&gt;Date de la commande : &lt;/b&gt;%s&lt;/p&gt;' % ''.join(
            HTML_ESCAPE_TABLE.get(c, c) for c in record.date_order))
        description.append(u'&lt;p&gt;&lt;b&gt;Produit choisi : &lt;/b&gt;%s&lt;/p&gt;' % ''.join(
            HTML_ESCAPE_TABLE.get(c, c) for c in line.product_id.display_name))

if description:
    env['project.task'].create({
        'project_id': project.id,
        'name': line.order_partner_id.name,
        'user_id': manager.id,
        'partner_id': line.order_partner_id.id,
        'stage_id': column.id,
        'description': '\n'.join(description),
    })
    </field>
  </record>

  <record id="action_add_followup_lead" model="ir.actions.server">
    <field name="name">[commown] Add followup lead</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">20</field>
    <field name="state">code</field>
    <field name="code">
if object.product_id.is_rental:
    env['crm.lead'].create({
        'name': u'Suivi de commande',
        'partner_id': object.partner_id.id,
        'type': 'opportunity',
        'team_id': env.ref('sales_team.salesteam_website_sales').id,
        })
    </field>
  </record>

  <record id="website_order_mail_sent" model="base.action.rule">
    <field name="name">[commown] Order mail sent</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">1</field>
    <field name="kind">on_write</field>
    <field name="filter_pre_domain">[('state', '=', 'draft')]</field>
    <field name="filter_domain">[('state', '=', 'sent')]</field>
    <field name="server_action_ids" eval="[(6,0,[ref('commown.action_add_to_support_groups'), ref('commown.action_add_investor_management_task'), ref('action_add_followup_lead')])]"/>
  </record>

</odoo>
