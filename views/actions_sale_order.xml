<?xml version="1.0"?>
<odoo>

  <record id="action_add_to_support_groups" model="ir.actions.server">
    <field name="name">[commown] Add buyer to product's support groups</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">5</field>
    <field name="state">code</field>
    <field name="code">
for so_line in record.order_line:
    for group in so_line.product_id.product_tmpl_id.support_group_ids:
        group.add_users(record.partner_id.user_ids)
    </field>
  </record>

  <record id="action_add_investor_management_task" model="ir.actions.server">
    <field name="name">[commown] Add investor management task</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">10</field>
    <field name="state">code</field>
    <field name="code">
PROJECT_NAME = u'Suivi des Investisseurs'
MANAGER_LOGIN = u'fred@commown.fr'

project = env['project.project'].search([('name', '=', PROJECT_NAME)])
manager = env['res.users'].search([('login', '=', MANAGER_LOGIN)])

if len(project) == 1 and len(manager) == 1:

    HTML_ESCAPE_TABLE = {
        "&amp;": "&amp;amp;",
        '"': "&amp;quot;",
        "'": "&amp;apos;",
        "&gt;": "&amp;gt;",
        "&lt;": "&amp;lt;",
        }

    product_tmpl_ids = env['product.template'].search([
        ('is_equity', '=', True),
        ('equity_type', '=', 'invest')
    ]).mapped('id')

    for column in project.type_ids:
        if column.sequence == 1:
            break
    else:
        raise Warning('[server-action] 1st column not found on %r' % PROJECT_NAME)

    description = []
    for line in record.order_line:
        if line.product_id.product_tmpl_id.id in product_tmpl_ids:
            description.append(u'&lt;p&gt;&lt;b&gt;NÂ° de commande : &lt;/b&gt;%s&lt;/p&gt;' % ''.join(
                HTML_ESCAPE_TABLE.get(c, c) for c in record.name))
            description.append(u'&lt;p&gt;&lt;b&gt;Date de la commande : &lt;/b&gt;%s&lt;/p&gt;' % ''.join(
                HTML_ESCAPE_TABLE.get(c, c) for c in record.date_order))
            description.append(u'&lt;p&gt;&lt;b&gt;Produit choisi : &lt;/b&gt;%s&lt;/p&gt;' % ''.join(
                HTML_ESCAPE_TABLE.get(c, c) for c in line.product_id.display_name))

    if description:
        env['project.task'].create({
            'project_id': project.id,
            'name': line.order_partner_id.name,
            'user_id': manager.id,
            'partner_id': line.order_partner_id.id,
            'stage_id': column.id,
            'description': '\n'.join(description),
        })
    </field>
  </record>

  <record id="action_add_followup_lead" model="ir.actions.server">
    <field name="name">[commown] Add followup lead</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">20</field>
    <field name="state">code</field>
    <field name="code">
title_template = u'[%(sale)s-%(count)02d] %(descr)s'

if record.used_coupons():
    title_template += u' - COUPON'
ctx = {'sale': record.name, 'count': 0}

for so_line in record.order_line:
    product = so_line.product_id

    if not product.is_rental or not product.rental_contract_tmpl_id:
        continue

    team = product.followup_sales_team_id
    if not team:
        continue

    stages = env['crm.stage'].search([('team_id', '=', team.id)],
                                     order='sequence')
    stage_id = stages[0].id if stages else False
    for stage in stages:
        if '[stage: start]' in stage.name:
            stage_id = stage.id
            break

    ctx['descr'] = product.display_name

    for _num in range(int(so_line.product_uom_qty)):
        ctx['count'] += 1
        lead = env['crm.lead'].create({
            'name': title_template % ctx,
            'partner_id': record.partner_id.id,
            'type': 'opportunity',
            'stage_id': stage_id,
            })
        # Override post-create behaviour that auto-assigns team_id
        lead.update({'team_id': team.id})
    </field>
  </record>

  <record id="action_add_receivable_account" model="ir.actions.server">
    <field name="name">[commown] Add receivable account</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">30</field>
    <field name="state">code</field>
    <field name="code">
# If partner's receivable account does not exist or is a standard one,
# create an account dedicated to the partner.
# For employees of a company, go up the parent_id hierarchy and create
# the account there.

partner = record.partner_id

while partner.parent_id:
    partner = partner.parent_id

account = partner.property_account_receivable_id
if not account or account.get_xml_id().get(account.id):
    account = env['account.account'].create({
        'code': 'C-%s' % partner.id,
        'name': partner.name,
        'tag_ids': [(6, 0, [env.ref('account.account_tag_operating').id])],
        'user_type_id': env.ref('account.data_account_type_receivable').id,
        'tax_ids': [(6, 0, [env.ref('l10n_fr.1_tva_normale').id])],
        'reconcile': True,
    })

    partner.update({'property_account_receivable_id': account.id})
    </field>
  </record>

  <record id="action_add_rental_contract" model="ir.actions.server">
    <field name="name">[commown] Add rental contract</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">40</field>
    <field name="state">code</field>
    <field name="code">
record.generate_rental_contracts()
    </field>
  </record>

  <record id="website_order_mail_sent" model="base.action.rule">
    <field name="name">[commown] Sale done</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="sequence">1</field>
    <field name="kind">on_write</field>
    <field name="filter_pre_domain">['|', ('state', '=', 'draft'), ('state', '=', 'sent')]</field>
    <field name="filter_domain">[('state', '=', 'sale')]</field>
    <field name="server_action_ids" eval="[(6,0,[ref('commown.action_add_to_support_groups'), ref('commown.action_add_investor_management_task'), ref('commown.action_add_followup_lead'), ref('commown.action_add_receivable_account'), ref('commown.action_add_rental_contract')])]"/>
  </record>

</odoo>
